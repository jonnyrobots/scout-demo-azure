trigger:
  - main

resources:
  - repo: self

variables:
  tag: "$(Build.BuildId)"
  image: "jonny.azurecr.io/scout-demo-service"

stages:
  - stage: Build_and_check_vulns
    displayName: Check vulnerabilities
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build an image
            inputs:
              command: build
              dockerfile: "$(Build.SourcesDirectory)/Dockerfile"
              repository: $(image)
              tags: |
                $(tag)
          - task: CmdLine@2
            displayName: Find CVEs on image
            inputs:
              script: |
                # Install the Docker Scout CLI
                curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --
                # Login to Docker Hub required for Docker Scout CLI
                docker login -u $(DOCKER_HUB_USER) -p $(DOCKER_HUB_PAT)
                # Get a CVE report for the built image and fail the pipeline when critical or high CVEs are detected
                docker scout cves $(image):$(tag) --exit-code --only-severity critical,high
  - stage: Build
    displayName: Push to production
    jobs:  
      - job: Build
        displayName: Push image
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: CmdLine@2
            inputs:
              script: |
                # login to ACR 
                docker login -u azpipelinepush -p $(AzureCR) jonny.azurecr.io
                #containerd
                docker buildx create --use
                # build and push                
                docker buildx b -t $(image):$(tag) . --platform linux/amd64 --no-cache --sbom=1 --provenance=1 --push
                # Install the Docker Scout CLI
                curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --
                # submit VEX statement
                docker scout attestation add $(image):$(tag) --file $(Build.SourcesDirectory)/CVE-2024-29041.vex.json --predicate-type https://openvex.dev/ns/v0.2.0